{"ast":null,"code":"import { TrafficLightService } from '../../services/traffic-light.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/traffic-light.service\";\nimport * as i2 from \"@angular/common\";\nfunction TrafficLightComponent_ng_container_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n  if (rf & 2) {\n    const color_r3 = ctx.$implicit;\n    const currentColor_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵclassMap(color_r3);\n    i0.ɵɵclassProp(\"active\", currentColor_r1.includes(color_r3));\n  }\n}\nfunction TrafficLightComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵtemplate(2, TrafficLightComponent_ng_container_0_div_2_Template, 1, 4, \"div\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.lightsColors);\n  }\n}\nexport class TrafficLightComponent {\n  constructor(trafficLightService) {\n    this.trafficLightService = trafficLightService;\n    this.isSynchronized = false;\n    this.lightsColors = ['red', 'yellow', 'green'];\n  }\n  ngOnChanges(changes) {\n    if (changes['isSynchronized']) {\n      console.log('isSynchronized', this.isSynchronized);\n      this.trafficLightService.startCycle(this.isSynchronized);\n    }\n  }\n  static {\n    this.ɵfac = function TrafficLightComponent_Factory(t) {\n      return new (t || TrafficLightComponent)(i0.ɵɵdirectiveInject(i1.TrafficLightService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TrafficLightComponent,\n      selectors: [[\"app-traffic-light\"]],\n      inputs: {\n        isSynchronized: \"isSynchronized\"\n      },\n      features: [i0.ɵɵProvidersFeature([TrafficLightService]), i0.ɵɵNgOnChangesFeature],\n      decls: 2,\n      vars: 3,\n      consts: [[4, \"ngIf\"], [1, \"traffic-light\"], [3, \"active\", \"class\", 4, \"ngFor\", \"ngForOf\"]],\n      template: function TrafficLightComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TrafficLightComponent_ng_container_0_Template, 3, 1, \"ng-container\", 0);\n          i0.ɵɵpipe(1, \"async\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.trafficLightService.currentState$));\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i2.AsyncPipe],\n      styles: [\".traffic-light[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 5px;\\n  padding: 6px;\\n  width: 50px;\\n  background-color: aliceblue;\\n  border-radius: 500px;\\n  border: 2px solid #000;\\n}\\n\\n.red[_ngcontent-%COMP%], .green[_ngcontent-%COMP%], .yellow[_ngcontent-%COMP%] {\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 50%;\\n  background-color: gray;\\n  transition: background-color 0.3s ease;\\n}\\n\\n.red.active[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n.green.active[_ngcontent-%COMP%] {\\n  background-color: green;\\n}\\n\\n.yellow.active[_ngcontent-%COMP%] {\\n  background-color: yellow;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90cmFmZmljLWxpZ2h0L3RyYWZmaWMtbGlnaHQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLFFBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLDJCQUFBO0VBQ0Esb0JBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0Esc0NBQUE7QUFDRjs7QUFFQTtFQUNFLHFCQUFBO0FBQ0Y7O0FBRUE7RUFDRSx1QkFBQTtBQUNGOztBQUVBO0VBQ0Usd0JBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi50cmFmZmljLWxpZ2h0IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBnYXA6IDVweDtcclxuICBwYWRkaW5nOiA2cHg7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwMHB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICMwMDA7XHJcbn1cclxuXHJcbi5yZWQsIC5ncmVlbiwgLnllbGxvdyB7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG59XHJcblxyXG4ucmVkLmFjdGl2ZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG59XHJcblxyXG4uZ3JlZW4uYWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxufVxyXG5cclxuLnllbGxvdy5hY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n      changeDetection: 0\n    });\n  }\n}","map":{"version":3,"names":["TrafficLightService","i0","ɵɵelement","ɵɵclassMap","color_r3","ɵɵclassProp","currentColor_r1","includes","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtemplate","TrafficLightComponent_ng_container_0_div_2_Template","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r0","lightsColors","TrafficLightComponent","constructor","trafficLightService","isSynchronized","ngOnChanges","changes","console","log","startCycle","ɵɵdirectiveInject","i1","selectors","inputs","features","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","decls","vars","consts","template","TrafficLightComponent_Template","rf","ctx","TrafficLightComponent_ng_container_0_Template","ɵɵpipeBind1","currentState$"],"sources":["C:\\Dev\\traffic-light-app\\src\\app\\components\\traffic-light\\traffic-light.component.ts","C:\\Dev\\traffic-light-app\\src\\app\\components\\traffic-light\\traffic-light.component.html"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input, OnChanges,\n  OnDestroy, SimpleChanges,\n} from '@angular/core';\nimport { Light, LightsData } from '../../model/lights-data';\nimport { TrafficLightService } from '../../services/traffic-light.service';\n\n@Component({\n  selector: 'app-traffic-light',\n  templateUrl: './traffic-light.component.html',\n  styleUrls: ['./traffic-light.component.scss'],\n  providers: [TrafficLightService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrafficLightComponent implements OnChanges {\n  @Input() isSynchronized = false;\n\n  protected lightsColors: Light[] = ['red', 'yellow', 'green'];\n\n\n  constructor(\n    protected trafficLightService: TrafficLightService,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes['isSynchronized']) {\n      console.log('isSynchronized', this.isSynchronized)\n      this.trafficLightService.startCycle(this.isSynchronized);\n    }\n  }\n}\n","<ng-container *ngIf=\"trafficLightService.currentState$ | async as currentColor\">\n  <div class=\"traffic-light\">\n    <div\n      *ngFor=\"let color of lightsColors\"\n      [class.active]=\"currentColor.includes(color)\"\n      [class]=\"color\"\n    ></div>\n  </div>\n</ng-container>\n"],"mappings":"AAQA,SAASA,mBAAmB,QAAQ,sCAAsC;;;;;;ICNtEC,EAAA,CAAAC,SAAA,UAIO;;;;;IADLD,EAAA,CAAAE,UAAA,CAAAC,QAAA,CAAe;IADfH,EAAA,CAAAI,WAAA,WAAAC,eAAA,CAAAC,QAAA,CAAAH,QAAA,EAA6C;;;;;IAJnDH,EAAA,CAAAO,uBAAA,GAAgF;IAC9EP,EAAA,CAAAQ,cAAA,aAA2B;IACzBR,EAAA,CAAAS,UAAA,IAAAC,mDAAA,iBAIO;IACTV,EAAA,CAAAW,YAAA,EAAM;IACRX,EAAA,CAAAY,qBAAA,EAAe;;;;IALSZ,EAAA,CAAAa,SAAA,GAAe;IAAfb,EAAA,CAAAc,UAAA,YAAAC,MAAA,CAAAC,YAAA,CAAe;;;ADcvC,OAAM,MAAOC,qBAAqB;EAMhCC,YACYC,mBAAwC;IAAxC,KAAAA,mBAAmB,GAAnBA,mBAAmB;IANtB,KAAAC,cAAc,GAAG,KAAK;IAErB,KAAAJ,YAAY,GAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;EAKzD;EAEHK,WAAWA,CAACC,OAAsB;IAChC,IAAGA,OAAO,CAAC,gBAAgB,CAAC,EAAE;MAC5BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACJ,cAAc,CAAC;MAClD,IAAI,CAACD,mBAAmB,CAACM,UAAU,CAAC,IAAI,CAACL,cAAc,CAAC;;EAE5D;;;uBAfWH,qBAAqB,EAAAjB,EAAA,CAAA0B,iBAAA,CAAAC,EAAA,CAAA5B,mBAAA;IAAA;EAAA;;;YAArBkB,qBAAqB;MAAAW,SAAA;MAAAC,MAAA;QAAAT,cAAA;MAAA;MAAAU,QAAA,GAAA9B,EAAA,CAAA+B,kBAAA,CAHrB,CAAChC,mBAAmB,CAAC,GAAAC,EAAA,CAAAgC,oBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCdlCtC,EAAA,CAAAS,UAAA,IAAA+B,6CAAA,0BAQe;;;;UARAxC,EAAA,CAAAc,UAAA,SAAAd,EAAA,CAAAyC,WAAA,OAAAF,GAAA,CAAApB,mBAAA,CAAAuB,aAAA,EAAgD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}