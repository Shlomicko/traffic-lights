{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TrafficLightComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n  if (rf & 2) {\n    const color_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(color_r1);\n    i0.ɵɵclassProp(\"active\", ctx_r0.currentColor.includes(color_r1));\n  }\n}\nexport class TrafficLightComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.isSynchronized = false;\n    this.activeLights = [{\n      lights: ['red'],\n      duration: 3000\n    }, {\n      lights: ['red', 'yellow'],\n      duration: 1500\n    }, {\n      lights: ['green'],\n      duration: 3000\n    }, {\n      lights: ['yellow'],\n      duration: 1500\n    }];\n    this.lightsColors = ['red', 'yellow', 'green'];\n    this.currentColor = ['red'];\n  }\n  ngOnChanges() {\n    clearInterval(this.intervalId);\n    clearTimeout(this.delayTimeout);\n    this.currentColor = ['red'];\n    if (this.isSynchronized) {\n      this.startSynchronizedCycle();\n    } else {\n      this.startCycle();\n    }\n  }\n  startCycle() {\n    clearInterval(this.intervalId);\n    clearTimeout(this.delayTimeout);\n    const delay = Math.random() * 5000;\n    this.delayTimeout = setTimeout(() => {\n      this.runCycle();\n    }, delay);\n  }\n  startSynchronizedCycle() {\n    this.runCycle();\n    return;\n    this.updateLight();\n    this.intervalId = setInterval(() => this.runCycle(), this.activeLights[0].duration);\n  }\n  runCycle() {\n    this.updateLight();\n    const duration = this.getCurrentColorDuration(this.currentColor);\n    this.intervalId = setTimeout(() => this.runCycle(), duration);\n  }\n  updateLight() {\n    const index = this.activeLights.findIndex(value => value.lights === this.currentColor);\n    this.currentColor = this.activeLights[(index + 1) % this.activeLights.length].lights;\n    this.cdr.markForCheck();\n  }\n  getCurrentColorDuration(key) {\n    const curLight = this.activeLights.find(value => value.lights === key);\n    return curLight?.duration || 0;\n  }\n  ngOnDestroy() {\n    clearInterval(this.intervalId);\n    clearTimeout(this.delayTimeout);\n  }\n  static {\n    this.ɵfac = function TrafficLightComponent_Factory(t) {\n      return new (t || TrafficLightComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TrafficLightComponent,\n      selectors: [[\"app-traffic-light\"]],\n      inputs: {\n        isSynchronized: \"isSynchronized\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"traffic-light\"], [3, \"active\", \"class\", 4, \"ngFor\", \"ngForOf\"]],\n      template: function TrafficLightComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, TrafficLightComponent_div_1_Template, 1, 4, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.lightsColors);\n        }\n      },\n      dependencies: [i1.NgForOf],\n      styles: [\".traffic-light[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 5px;\\n  padding: 6px;\\n  width: 50px;\\n  background-color: aliceblue;\\n  border-radius: 500px;\\n  border: 2px solid #000;\\n}\\n\\n.red[_ngcontent-%COMP%], .green[_ngcontent-%COMP%], .yellow[_ngcontent-%COMP%] {\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 50%;\\n  background-color: gray;\\n  transition: background-color 0.3s ease;\\n}\\n\\n.red.active[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n.green.active[_ngcontent-%COMP%] {\\n  background-color: green;\\n}\\n\\n.yellow.active[_ngcontent-%COMP%] {\\n  background-color: yellow;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90cmFmZmljLWxpZ2h0L3RyYWZmaWMtbGlnaHQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLFFBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLDJCQUFBO0VBQ0Esb0JBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0Esc0NBQUE7QUFDRjs7QUFFQTtFQUNFLHFCQUFBO0FBQ0Y7O0FBRUE7RUFDRSx1QkFBQTtBQUNGOztBQUVBO0VBQ0Usd0JBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi50cmFmZmljLWxpZ2h0IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBnYXA6IDVweDtcclxuICBwYWRkaW5nOiA2cHg7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwMHB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICMwMDA7XHJcbn1cclxuXHJcbi5yZWQsIC5ncmVlbiwgLnllbGxvdyB7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG59XHJcblxyXG4ucmVkLmFjdGl2ZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG59XHJcblxyXG4uZ3JlZW4uYWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxufVxyXG5cclxuLnllbGxvdy5hY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n      changeDetection: 0\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelement","ɵɵclassMap","color_r1","ɵɵclassProp","ctx_r0","currentColor","includes","TrafficLightComponent","constructor","cdr","isSynchronized","activeLights","lights","duration","lightsColors","ngOnChanges","clearInterval","intervalId","clearTimeout","delayTimeout","startSynchronizedCycle","startCycle","delay","Math","random","setTimeout","runCycle","updateLight","setInterval","getCurrentColorDuration","index","findIndex","value","length","markForCheck","key","curLight","find","ngOnDestroy","ɵɵdirectiveInject","ChangeDetectorRef","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","TrafficLightComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtemplate","TrafficLightComponent_div_1_Template","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Dev\\traffic-light-app\\src\\app\\components\\traffic-light\\traffic-light.component.ts","C:\\Dev\\traffic-light-app\\src\\app\\components\\traffic-light\\traffic-light.component.html"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { Light, LightsData } from '../../model/lights-data';\n\n@Component({\n  selector: 'app-traffic-light',\n  templateUrl: './traffic-light.component.html',\n  styleUrls: ['./traffic-light.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrafficLightComponent implements OnDestroy {\n  @Input() isSynchronized = false;\n\n  private activeLights: LightsData[] = [\n    { lights: ['red'], duration: 3000 },\n    { lights: ['red', 'yellow'], duration: 1500 },\n    { lights: ['green'], duration: 3000 },\n    { lights: ['yellow'], duration: 1500 },\n  ];\n  protected lightsColors: Light[] = ['red', 'yellow', 'green'];\n  protected currentColor: Light[] = ['red'];\n  private intervalId: any;\n  private delayTimeout: any;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges() {\n    clearInterval(this.intervalId);\n    clearTimeout(this.delayTimeout);\n    this.currentColor = ['red'];\n    if (this.isSynchronized) {\n      this.startSynchronizedCycle();\n    } else {\n      this.startCycle();\n    }\n  }\n\n  private startCycle() {\n    clearInterval(this.intervalId);\n    clearTimeout(this.delayTimeout);\n    const delay = Math.random() * 5000;\n    this.delayTimeout = setTimeout(() => {\n      this.runCycle();\n    }, delay);\n  }\n\n  private startSynchronizedCycle() {\n    this.runCycle();\n    return;\n    this.updateLight();\n    this.intervalId = setInterval(\n      () => this.runCycle(),\n      this.activeLights[0].duration,\n    );\n  }\n\n  private runCycle(): void {\n    this.updateLight();\n    const duration = this.getCurrentColorDuration(this.currentColor);\n    this.intervalId = setTimeout(() => this.runCycle(), duration);\n  }\n\n  private updateLight() {\n    const index = this.activeLights.findIndex(\n      (value) => value.lights === this.currentColor,\n    );\n    this.currentColor =\n      this.activeLights[(index + 1) % this.activeLights.length].lights;\n    this.cdr.markForCheck();\n  }\n\n  private getCurrentColorDuration(key: string[]): number {\n    const curLight = this.activeLights.find((value) => value.lights === key);\n    return curLight?.duration || 0;\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.intervalId);\n    clearTimeout(this.delayTimeout);\n  }\n}\n","<div class=\"traffic-light\">\n  <div\n    *ngFor=\"let color of lightsColors\"\n    [class.active]=\"currentColor.includes(color)\"\n    [class]=\"color\"\n  ></div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}