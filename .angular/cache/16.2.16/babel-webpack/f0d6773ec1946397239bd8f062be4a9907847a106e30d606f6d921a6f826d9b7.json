{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TrafficLightComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const color_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(color_r1);\n    i0.ɵɵclassProp(\"active\", ctx_r0.currentColor.includes(color_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.del4);\n  }\n}\nexport class TrafficLightComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.isSynchronized = false;\n    this.activeLights = [['red'], ['red', 'yellow'], ['green'], ['yellow']];\n    this.lightsColors = ['red', 'yellow', 'green'];\n    this.currentColor = ['red'];\n  }\n  ngOnInit() {\n    this.startCycle();\n  }\n  ngOnChanges() {\n    if (this.isSynchronized) {\n      clearInterval(this.intervalId);\n      clearTimeout(this.delayTimeout);\n      this.startSynchronizedCycle();\n    } else {\n      this.startCycle();\n    }\n  }\n  startCycle() {\n    clearInterval(this.intervalId);\n    clearTimeout(this.delayTimeout);\n    this.delay = Math.random() * 5000;\n    this.delayTimeout = setTimeout(() => {\n      this.updateLight();\n      this.intervalId = setInterval(() => this.updateLight(), 500);\n    }, this.delay);\n  }\n  startSynchronizedCycle() {\n    this.updateLight();\n    this.intervalId = setInterval(() => this.updateLight(), 9000);\n  }\n  updateLight() {\n    const index = this.activeLights.indexOf(this.currentColor);\n    this.currentColor = this.activeLights[(index + 1) % this.activeLights.length];\n    this.cdr.markForCheck();\n  }\n  ngOnDestroy() {\n    clearInterval(this.intervalId);\n    clearTimeout(this.delayTimeout);\n  }\n  static {\n    this.ɵfac = function TrafficLightComponent_Factory(t) {\n      return new (t || TrafficLightComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TrafficLightComponent,\n      selectors: [[\"app-traffic-light\"]],\n      inputs: {\n        isSynchronized: \"isSynchronized\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"traffic-light\"], [3, \"active\", \"class\", 4, \"ngFor\", \"ngForOf\"]],\n      template: function TrafficLightComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, TrafficLightComponent_div_1_Template, 2, 5, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.lightsColors);\n        }\n      },\n      dependencies: [i1.NgForOf],\n      styles: [\".traffic-light[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 5px;\\n  padding: 6px;\\n  width: 50px;\\n  background-color: aliceblue;\\n  border-radius: 500px;\\n  border: 2px solid #000;\\n}\\n\\n.red[_ngcontent-%COMP%], .green[_ngcontent-%COMP%], .yellow[_ngcontent-%COMP%] {\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 50%;\\n  background-color: gray;\\n  transition: background-color 0.3s ease;\\n}\\n\\n.red.active[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n.green.active[_ngcontent-%COMP%] {\\n  background-color: green;\\n}\\n\\n.yellow.active[_ngcontent-%COMP%] {\\n  background-color: yellow;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90cmFmZmljLWxpZ2h0L3RyYWZmaWMtbGlnaHQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLFFBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLDJCQUFBO0VBQ0Esb0JBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0Esc0NBQUE7QUFDRjs7QUFFQTtFQUNFLHFCQUFBO0FBQ0Y7O0FBRUE7RUFDRSx1QkFBQTtBQUNGOztBQUVBO0VBQ0Usd0JBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi50cmFmZmljLWxpZ2h0IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBnYXA6IDVweDtcclxuICBwYWRkaW5nOiA2cHg7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwMHB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICMwMDA7XHJcbn1cclxuXHJcbi5yZWQsIC5ncmVlbiwgLnllbGxvdyB7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG59XHJcblxyXG4ucmVkLmFjdGl2ZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG59XHJcblxyXG4uZ3JlZW4uYWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxufVxyXG5cclxuLnllbGxvdy5hY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n      changeDetection: 0\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassMap","color_r1","ɵɵclassProp","ctx_r0","currentColor","includes","ɵɵadvance","ɵɵtextInterpolate","del4","TrafficLightComponent","constructor","cdr","isSynchronized","activeLights","lightsColors","ngOnInit","startCycle","ngOnChanges","clearInterval","intervalId","clearTimeout","delayTimeout","startSynchronizedCycle","delay","Math","random","setTimeout","updateLight","setInterval","index","indexOf","length","markForCheck","ngOnDestroy","ɵɵdirectiveInject","ChangeDetectorRef","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","TrafficLightComponent_Template","rf","ctx","ɵɵtemplate","TrafficLightComponent_div_1_Template","ɵɵproperty"],"sources":["C:\\Dev\\traffic-light-app\\src\\app\\components\\traffic-light\\traffic-light.component.ts","C:\\Dev\\traffic-light-app\\src\\app\\components\\traffic-light\\traffic-light.component.html"],"sourcesContent":["import {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-traffic-light',\n  templateUrl: './traffic-light.component.html',\n  styleUrls: ['./traffic-light.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrafficLightComponent implements OnDestroy {\n  @Input() isSynchronized = false;\n\n  activeLights: string[][] = [\n    ['red'],\n    ['red', 'yellow'],\n    ['green'],\n    ['yellow'],\n  ];\n  lightsColors: string[] = ['red', 'yellow', 'green'];\n  currentColor = ['red'];\n  protected delay!: number;\n  private intervalId: any;\n  private delayTimeout: any;\n\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this.startCycle();\n  }\n\n  ngOnChanges() {\n    if (this.isSynchronized) {\n      clearInterval(this.intervalId);\n      clearTimeout(this.delayTimeout);\n      this.startSynchronizedCycle();\n    } else {\n      this.startCycle();\n    }\n  }\n\n  startCycle() {\n    clearInterval(this.intervalId);\n    clearTimeout(this.delayTimeout);\n    this.delay = Math.random() * 5000;\n    this.delayTimeout = setTimeout(() => {\n      this.updateLight();\n      this.intervalId = setInterval(() => this.updateLight(), 500);\n    }, this.delay);\n  }\n\n  startSynchronizedCycle() {\n    this.updateLight();\n    this.intervalId = setInterval(() => this.updateLight(), 9000);\n  }\n\n  updateLight() {\n    const index = this.activeLights.indexOf(this.currentColor);\n    this.currentColor =\n      this.activeLights[(index + 1) % this.activeLights.length];\n    this.cdr.markForCheck();\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.intervalId);\n    clearTimeout(this.delayTimeout);\n  }\n}\n","<div class=\"traffic-light\">\n  <div\n    *ngFor=\"let color of lightsColors\"\n    [class.active]=\"currentColor.includes(color)\"\n    [class]=\"color\"\n  >{{del4}}</div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}