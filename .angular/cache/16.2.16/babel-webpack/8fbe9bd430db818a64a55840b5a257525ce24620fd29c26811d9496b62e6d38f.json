{"ast":null,"code":"import { BehaviorSubject, Subject, timer } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class TrafficLightService {\n  constructor() {\n    this.colors = [['red'], ['red', 'yellow'], ['green'], ['yellow']];\n    this.durations = [3000, 1500, 3000, 1500];\n    this.colorIndex = 0;\n    this.state$ = new BehaviorSubject(['red']);\n    this.stop$ = new Subject();\n  }\n  get currentState$() {\n    return this.state$.asObservable();\n  }\n  startCycle(isSynchronized) {\n    const randomDelay = isSynchronized ? 0 : Math.ceil(Math.random() * 5000);\n    this.stopOrResetCycle();\n    const delayInterval = this.durations[this.colorIndex];\n    timer(isSynchronized ? delayInterval : randomDelay, delayInterval).pipe(takeUntil(this.stop$), switchMap(() => {\n      this.colorIndex = (this.colorIndex + 1) % this.colors.length;\n      this.state$.next(this.colors[this.colorIndex]);\n      return timer(this.durations[this.colorIndex]).pipe(takeUntil(this.stop$));\n    })).subscribe();\n  }\n  stopOrResetCycle() {\n    this.colorIndex = 0;\n    this.state$.next(['red']);\n    this.stop$.next();\n  }\n  static {\n    this.ɵfac = function TrafficLightService_Factory(t) {\n      return new (t || TrafficLightService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TrafficLightService,\n      factory: TrafficLightService.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","Subject","timer","switchMap","takeUntil","TrafficLightService","constructor","colors","durations","colorIndex","state$","stop$","currentState$","asObservable","startCycle","isSynchronized","randomDelay","Math","ceil","random","stopOrResetCycle","delayInterval","pipe","length","next","subscribe","factory","ɵfac"],"sources":["C:\\Dev\\traffic-light-app\\src\\app\\services\\traffic-light.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, timer } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { Light } from '../model/lights-data';\n\n@Injectable()\nexport class TrafficLightService {\n  private readonly colors: Light[][] = [\n    ['red'],\n    ['red', 'yellow'],\n    ['green'],\n    ['yellow'],\n  ];\n  private readonly durations = [3000, 1500, 3000, 1500];\n  private colorIndex = 0;\n\n  private state$ = new BehaviorSubject<Light[]>(['red']);\n  private stop$ = new Subject<void>();\n\n  get currentState$(): Observable<Light[]> {\n    return this.state$.asObservable();\n  }\n\n  startCycle(isSynchronized: boolean): void {\n    const randomDelay = isSynchronized ? 0 : Math.ceil(Math.random() * 5000);\n\n    this.stopOrResetCycle();\n\n    const delayInterval = this.durations[this.colorIndex];\n\n    timer(isSynchronized ? delayInterval : randomDelay, delayInterval)\n      .pipe(\n        takeUntil(this.stop$),\n        switchMap(() => {\n          this.colorIndex = (this.colorIndex + 1) % this.colors.length;\n          this.state$.next(this.colors[this.colorIndex]);\n          return timer(this.durations[this.colorIndex]).pipe(\n            takeUntil(this.stop$),\n          );\n        }),\n      )\n      .subscribe();\n  }\n\n  stopOrResetCycle(): void {\n    this.colorIndex = 0;\n    this.state$.next(['red']);\n    this.stop$.next();\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,EAAcC,OAAO,EAAEC,KAAK,QAAQ,MAAM;AAClE,SAASC,SAAS,EAAEC,SAAS,QAAQ,gBAAgB;;AAIrD,OAAM,MAAOC,mBAAmB;EADhCC,YAAA;IAEmB,KAAAC,MAAM,GAAc,CACnC,CAAC,KAAK,CAAC,EACP,CAAC,KAAK,EAAE,QAAQ,CAAC,EACjB,CAAC,OAAO,CAAC,EACT,CAAC,QAAQ,CAAC,CACX;IACgB,KAAAC,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC7C,KAAAC,UAAU,GAAG,CAAC;IAEd,KAAAC,MAAM,GAAG,IAAIV,eAAe,CAAU,CAAC,KAAK,CAAC,CAAC;IAC9C,KAAAW,KAAK,GAAG,IAAIV,OAAO,EAAQ;;EAEnC,IAAIW,aAAaA,CAAA;IACf,OAAO,IAAI,CAACF,MAAM,CAACG,YAAY,EAAE;EACnC;EAEAC,UAAUA,CAACC,cAAuB;IAChC,MAAMC,WAAW,GAAGD,cAAc,GAAG,CAAC,GAAGE,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAAC;IAExE,IAAI,CAACC,gBAAgB,EAAE;IAEvB,MAAMC,aAAa,GAAG,IAAI,CAACb,SAAS,CAAC,IAAI,CAACC,UAAU,CAAC;IAErDP,KAAK,CAACa,cAAc,GAAGM,aAAa,GAAGL,WAAW,EAAEK,aAAa,CAAC,CAC/DC,IAAI,CACHlB,SAAS,CAAC,IAAI,CAACO,KAAK,CAAC,EACrBR,SAAS,CAAC,MAAK;MACb,IAAI,CAACM,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU,GAAG,CAAC,IAAI,IAAI,CAACF,MAAM,CAACgB,MAAM;MAC5D,IAAI,CAACb,MAAM,CAACc,IAAI,CAAC,IAAI,CAACjB,MAAM,CAAC,IAAI,CAACE,UAAU,CAAC,CAAC;MAC9C,OAAOP,KAAK,CAAC,IAAI,CAACM,SAAS,CAAC,IAAI,CAACC,UAAU,CAAC,CAAC,CAACa,IAAI,CAChDlB,SAAS,CAAC,IAAI,CAACO,KAAK,CAAC,CACtB;IACH,CAAC,CAAC,CACH,CACAc,SAAS,EAAE;EAChB;EAEAL,gBAAgBA,CAAA;IACd,IAAI,CAACX,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,MAAM,CAACc,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;IACzB,IAAI,CAACb,KAAK,CAACa,IAAI,EAAE;EACnB;;;uBA1CWnB,mBAAmB;IAAA;EAAA;;;aAAnBA,mBAAmB;MAAAqB,OAAA,EAAnBrB,mBAAmB,CAAAsB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}